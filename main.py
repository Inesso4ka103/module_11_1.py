# Pandas — это библиотека Python для обработки и анализа структурированных данных, ее название
# происходит от «panel data» («панельные данные»). Панельными данными называют информацию, полученную в
# результате исследований и структурированную в виде таблиц. Для работы с такими массивами данных и создан
# Pandas.

import pandas as pd

# В библиотеке pandas определены два класса объектов для работы с данными:
# Series — одномерный массив, который может хранить значения любого типа данных;
# DataFrame — двумерный массив (таблица), в котором столбцами являются объекты класса Series.


d = {"a": 10, "b": 20, "c": 30, "g": 40}
print(pd.Series(d))
print()
print(pd.Series(d, index=["a", "b", "c", "d"]))

students_marks_dict = {"student": ["Студент_1", "Студент_2", "Студент_3"],
                       "math": [5, 3, 4],
                       "physics": [4, 5, 5]}
students = pd.DataFrame(students_marks_dict)
print(students)


#NumPy – одна из самых популярных библиотек для инженерных и научных вычислений в Python: она содержит
# множество методов для работы с многомерными массивами и матрицами и отличается высокой скоростью
# обработки больших объемов данных. Мощная функциональность NumPy используется в нескольких других
# популярных библиотеках – Pandas, SciPy, Matplotlib, Scikit-learn и TensorFlow.

import numpy as np

# Создание массива из списка
a = np.array([1, 2, 3, 4, 5])
print(a)

# Создание двумерного массива из списка списков
b = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(b)

# Создание массива из диапазона значений
c = np.arange(0, 10, 2)  # Создаем массив из значений от 0 до 10 с шагом 2
print(c)

# Создание массива из равномерно распределенных значений
d = np.linspace(0, 1, 5)  # Создаем массив из 5 равномерно распределенных значений от 0 до 1
print(d)

# Создание массива из случайных значений
e = np.random.rand(3, 3)  # Создаем массив из 3x3 случайных значений
print(e)

# Создание массива из нулей
f = np.zeros((2, 3))  # Создаем массив из нулей размером 2x3
print(f)

# Создание массива из единиц
g = np.ones((3, 3))   # Создаем массив из единиц размером 3x3
print(g)


